// Copyright 2023 Jeremy Edwards
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package jeremyje.coretemp_exporter.proto;
option go_package = "github.com/jeremyje/coretemp-exporter/proto";

import "google/protobuf/timestamp.proto";

// CpuDeviceMetrics holds details about CPU utilization and temperatures.
message CpuDeviceMetrics {
  // Load as a percentage [0-100].
  repeated int32 load = 1;
  // Temperature is the temperature of each core in celcius.
  repeated double temperature = 2;
  // NumCores is the total number of cores across all CPUs on the machine.
  int32 num_cores = 3;
  // Frequency is the clock frequency (Hz) of the CPU.
  double frequency_mhz = 4;
  // FSBFrequency is the clock frequency of the front side bus.
  double fsb_frequency_mhz = 5;
}

// DeviceMetrics holds the health metrics (temperature and other measurements) of the device.
message DeviceMetrics {
  // Name of the device.
  string name = 1;
  // Kind of device that is described.
  string kind = 2;
  // Temperature of the device in celcius if available.
  double temperature = 3;
  // CPU is populated if the device is a CPU.
  CpuDeviceMetrics cpu = 4;
}

// MachineMetrics holds a list of devices that can be instrumented for health.
message MachineMetrics {
  // Name is the hostname of the machine.
  string name = 1;
  // Device is a list of all the instrumented devices on the machine.
  repeated DeviceMetrics device = 2;
  // Timestamp of the sample of metrics.
  .google.protobuf.Timestamp timestamp = 3;
}
